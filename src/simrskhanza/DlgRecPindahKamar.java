/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package simrskhanza;

import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author firka
 */
public class DlgRecPindahKamar extends javax.swing.JDialog {
    private final Connection koneksi=koneksiDB.condb();
    private final validasi Valid=new validasi();
    private final sekuel Sequel=new sekuel();
    private PreparedStatement ps,pstotal;
    private ResultSet rs,rstotal;
    private int i;
    private String jmlPas;
    private final DefaultTableModel tabMode;
    /**
     * Creates new form DlgRecPindahKamar
     */
    public DlgRecPindahKamar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tabMode=new DefaultTableModel(null,new Object[]{
            "No.Rawat", "Tgl Registrasi","No RM","Pasien","Tgl Masuk","Jam Masuk","Tgl Keluar","Jam Keluar","Dokter","Nama Bangsal",
            "Gol Kamar","Status"
            }){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbPindah.setModel(tabMode);

        tbPindah.setPreferredScrollableViewportSize(new Dimension(800,800));
        tbPindah.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 12; i++) {
            TableColumn column = tbPindah.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(120);
            }else if(i==1){
                column.setPreferredWidth(80);
            }else if(i==2){
                column.setPreferredWidth(65);
            }else if(i==3){
                column.setPreferredWidth(180);
            }else if(i==4){
                column.setPreferredWidth(65);
            }else if(i==5){
                column.setPreferredWidth(65);
            }else if(i==6){
                column.setPreferredWidth(65);
            }else if(i==7){
                column.setPreferredWidth(65);
            }else if(i==8){
                column.setPreferredWidth(150);
            }else if(i==9){
               column.setPreferredWidth(250);
            }else if(i==10){
                column.setPreferredWidth(150);
            }else if(i==11){
                column.setPreferredWidth(150);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        panelBiasa2 = new widget.PanelBiasa();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPindah = new widget.Table();
        panelBiasa3 = new widget.PanelBiasa();
        tgl1 = new widget.Tanggal();
        label2 = new widget.Label();
        tgl2 = new widget.Tanggal();
        btCari1 = new widget.Button();
        label1 = new widget.Label();
        TCari = new widget.TextBox();
        btCari = new widget.Button();
        label5 = new widget.Label();
        jml = new widget.Label();
        panelisi1 = new widget.panelisi();
        btKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "..:: Transaksi Pindah Kamar ::..", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 11))); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout());

        panelBiasa2.setLayout(new java.awt.BorderLayout());

        tbPindah.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbPindah);

        panelBiasa2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        internalFrame1.add(panelBiasa2, java.awt.BorderLayout.CENTER);

        tgl1.setDisplayFormat("dd/MM/yyyy");
        panelBiasa3.add(tgl1);

        label2.setText("s/d");
        label2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        panelBiasa3.add(label2);

        tgl2.setDisplayFormat("dd/MM/yyyy");
        panelBiasa3.add(tgl2);

        btCari1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btCari1.setPreferredSize(new java.awt.Dimension(45, 32));
        btCari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCari1ActionPerformed(evt);
            }
        });
        panelBiasa3.add(btCari1);

        label1.setText("Cari :");
        label1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        panelBiasa3.add(label1);

        TCari.setPreferredSize(new java.awt.Dimension(250, 24));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelBiasa3.add(TCari);

        btCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btCari.setPreferredSize(new java.awt.Dimension(45, 32));
        btCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCariActionPerformed(evt);
            }
        });
        panelBiasa3.add(btCari);

        label5.setText("Jumlah :");
        label5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        panelBiasa3.add(label5);

        jml.setText("0");
        jml.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        panelBiasa3.add(jml);

        panelisi1.setPreferredSize(new java.awt.Dimension(50, 24));

        javax.swing.GroupLayout panelisi1Layout = new javax.swing.GroupLayout(panelisi1);
        panelisi1.setLayout(panelisi1Layout);
        panelisi1Layout.setHorizontalGroup(
            panelisi1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
        panelisi1Layout.setVerticalGroup(
            panelisi1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        panelBiasa3.add(panelisi1);

        btKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/101.png"))); // NOI18N
        btKeluar.setText("Keluar");
        btKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKeluarActionPerformed(evt);
            }
        });
        panelBiasa3.add(btKeluar);

        internalFrame1.add(panelBiasa3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeluarActionPerformed
       dispose();
    }//GEN-LAST:event_btKeluarActionPerformed

    private void tampil(){
        try{
           ps= koneksi.prepareStatement("SELECT kamar_inap.stts_pulang, kamar_inap.tgl_keluar, kamar_inap.jam_keluar, kamar_inap.tgl_masuk, kamar_inap.jam_masuk, reg_periksa.no_rawat,\n" +
            "  reg_periksa.tgl_registrasi, reg_periksa.no_rkm_medis, kamar.kd_bangsal, kamar.kd_kamar, bangsal.nm_bangsal, kamar.golkamar, pasien.nm_pasien,\n" +
            "  dokter.nm_dokter FROM kamar_inap\n" +
            "  INNER JOIN kamar ON kamar_inap.kd_kamar = kamar.kd_kamar\n" +
            "  INNER JOIN reg_periksa ON kamar_inap.no_rawat = reg_periksa.no_rawat\n" +
            "  INNER JOIN pasien ON reg_periksa.no_rkm_medis = pasien.no_rkm_medis\n" +
            "  INNER JOIN bangsal ON kamar.kd_bangsal = bangsal.kd_bangsal\n" +
            "  INNER JOIN dokter ON reg_periksa.kd_dokter = dokter.kd_dokter\n" +
            " WHERE reg_periksa.no_rawat like ? ORDER BY kamar_inap.tgl_keluar DESC");
//        ps.setString(1, "%"+NoRw.getText()+"%");
        rs = ps.executeQuery();
        jmlPas = Integer.toString(rs.getRow());
        jml.setText(jmlPas);
        tabMode.setRowCount(0);
        while(rs.next()){
//            "No.Rawat", "Tgl Registrasi","No RM","Pasien","Tgl Masuk","Jam Masuk","Tgl Keluar","Jam Keluar","Dokter","Nama Bangsal",
//            "Gol Kamar"
            tabMode.addRow(new Object[]{
                rs.getString("no_rawat"),rs.getString("tgl_registrasi"),rs.getString("no_rkm_medis"),rs.getString("nm_pasien"),
                rs.getString("tgl_masuk"),rs.getString("jam_masuk"),rs.getString("tgl_keluar"),rs.getString("jam_keluar"),
                rs.getString("nm_dokter"),rs.getString("nm_bangsal"),rs.getString("golkamar"),rs.getString("stts_pulang")
            });
        }
       }catch(Exception e){
           System.out.println("Error Open : "+e.getMessage());
       }
    }
    
    private void tampil_tgl(){
        try{
           ps= koneksi.prepareStatement("SELECT kamar_inap.stts_pulang, kamar_inap.tgl_keluar, kamar_inap.jam_keluar, kamar_inap.tgl_masuk, kamar_inap.jam_masuk, reg_periksa.no_rawat,\n" +
            "  reg_periksa.tgl_registrasi, reg_periksa.no_rkm_medis, kamar.kd_bangsal, kamar.kd_kamar, bangsal.nm_bangsal, kamar.golkamar, pasien.nm_pasien,\n" +
            "  dokter.nm_dokter FROM kamar_inap\n" +
            "  INNER JOIN kamar ON kamar_inap.kd_kamar = kamar.kd_kamar\n" +
            "  INNER JOIN reg_periksa ON kamar_inap.no_rawat = reg_periksa.no_rawat\n" +
            "  INNER JOIN pasien ON reg_periksa.no_rkm_medis = pasien.no_rkm_medis\n" +
            "  INNER JOIN bangsal ON kamar.kd_bangsal = bangsal.kd_bangsal\n" +
            "  INNER JOIN dokter ON reg_periksa.kd_dokter = dokter.kd_dokter\n" +
            " WHERE kamar_inap.tgl_masuk between ? and ? ORDER BY kamar_inap.tgl_keluar DESC");
        ps.setString(1, Valid.SetTgl(tgl1.getSelectedItem()+""));
        ps.setString(2, Valid.SetTgl(tgl2.getSelectedItem()+""));
        rs = ps.executeQuery();
        jmlPas = Integer.toString(rs.getRow());
        jml.setText(jmlPas);
        tabMode.setRowCount(0);
        while(rs.next()){
//            "No.Rawat", "Tgl Registrasi","No RM","Pasien","Tgl Masuk","Jam Masuk","Tgl Keluar","Jam Keluar","Dokter","Nama Bangsal",
//            "Gol Kamar"
            tabMode.addRow(new Object[]{
                rs.getString("no_rawat"),rs.getString("tgl_registrasi"),rs.getString("no_rkm_medis"),rs.getString("nm_pasien"),
                rs.getString("tgl_masuk"),rs.getString("jam_masuk"),rs.getString("tgl_keluar"),rs.getString("jam_keluar"),
                rs.getString("nm_dokter"),rs.getString("nm_bangsal"),rs.getString("golkamar"),rs.getString("stts_pulang")
            });
        }
       }catch(Exception e){
           System.out.println("Error Open : "+e.getMessage());
       }
    }
    
    private void tampil_cari(){
        try{
           ps= koneksi.prepareStatement("SELECT kamar_inap.stts_pulang, kamar_inap.tgl_keluar, kamar_inap.jam_keluar, kamar_inap.tgl_masuk, kamar_inap.jam_masuk, reg_periksa.no_rawat,\n" +
            "  reg_periksa.tgl_registrasi, reg_periksa.no_rkm_medis, kamar.kd_bangsal, kamar.kd_kamar, bangsal.nm_bangsal, kamar.golkamar, pasien.nm_pasien,\n" +
            "  dokter.nm_dokter FROM kamar_inap\n" +
            "  INNER JOIN kamar ON kamar_inap.kd_kamar = kamar.kd_kamar\n" +
            "  INNER JOIN reg_periksa ON kamar_inap.no_rawat = reg_periksa.no_rawat\n" +
            "  INNER JOIN pasien ON reg_periksa.no_rkm_medis = pasien.no_rkm_medis\n" +
            "  INNER JOIN bangsal ON kamar.kd_bangsal = bangsal.kd_bangsal\n" +
            "  INNER JOIN dokter ON reg_periksa.kd_dokter = dokter.kd_dokter\n" +
            " WHERE reg_periksa.no_rawat like ? or bangsal.nm_bangsal like ? or pasien.nm_pasien like ? and kamar_inap.tgl_masuk between ? and ?"
            + " ORDER BY kamar_inap.tgl_masuk asc");
        ps.setString(1, "%"+TCari.getText()+"%");
        ps.setString(2, "%"+TCari.getText()+"%");
        ps.setString(3, "%"+TCari.getText()+"%");
        ps.setString(4, Valid.SetTgl(tgl1.getSelectedItem()+""));
        ps.setString(5, Valid.SetTgl(tgl2.getSelectedItem()+""));
        rs = ps.executeQuery();
        tabMode.setRowCount(0);
        while(rs.next()){
//            "No.Rawat", "Tgl Registrasi","No RM","Pasien","Tgl Masuk","Jam Masuk","Tgl Keluar","Jam Keluar","Dokter","Nama Bangsal",
//            "Gol Kamar"
            tabMode.addRow(new Object[]{
                rs.getString("no_rawat"),rs.getString("tgl_registrasi"),rs.getString("no_rkm_medis"),rs.getString("nm_pasien"),
                rs.getString("tgl_masuk"),rs.getString("jam_masuk"),rs.getString("tgl_keluar"),rs.getString("jam_keluar"),
                rs.getString("nm_dokter"),rs.getString("nm_bangsal"),rs.getString("golkamar"),rs.getString("stts_pulang")
            });
            jmlPas = Integer.toString(rs.getRow());
        jml.setText(jmlPas);
        }
       }catch(Exception e){
           System.out.println("Error Open : "+e.getMessage());
       }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       tampil();
    }//GEN-LAST:event_formWindowOpened

    private void btCari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCari1ActionPerformed
        tampil_tgl();
    }//GEN-LAST:event_btCari1ActionPerformed

    private void btCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCariActionPerformed
       tampil_cari();
    }//GEN-LAST:event_btCariActionPerformed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            tampil_cari();
        }
    }//GEN-LAST:event_TCariKeyPressed

    public void setNo(String norwt, String nmPas){
//        NoRw.setText(norwt);
//        nmPasien.setText(nmPas);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgRecPindahKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgRecPindahKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgRecPindahKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgRecPindahKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgRecPindahKamar dialog = new DlgRecPindahKamar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.TextBox TCari;
    private widget.Button btCari;
    private widget.Button btCari1;
    private widget.Button btKeluar;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private widget.Label jml;
    private widget.Label label1;
    private widget.Label label2;
    private widget.Label label5;
    private widget.PanelBiasa panelBiasa2;
    private widget.PanelBiasa panelBiasa3;
    private widget.panelisi panelisi1;
    private widget.Table tbPindah;
    private widget.Tanggal tgl1;
    private widget.Tanggal tgl2;
    // End of variables declaration//GEN-END:variables
}
